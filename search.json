[{"path":[]},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement jenitjain10@gmail.com,juliesong525@gmail.com,tangmaomao2000@gmail.com,gengxingwang2019@u.northwestern.edu. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to SpotifyAssistantR","title":"Contributing to SpotifyAssistantR","text":"outlines propose change SpotifyAssistantR. Contributions welcome, greatly appreciated! Every little bit helps, credit always given. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to SpotifyAssistantR","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to SpotifyAssistantR","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed.","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/CONTRIBUTING.html","id":"report-bugs","dir":"","previous_headings":"Bigger changes","what":"Report bugs","title":"Contributing to SpotifyAssistantR","text":"’ve found bug, please first check already open issue bug. , please add comments issue minimize redundancy. Otherwise, please include following information reporting bug: operating system name version. details local setup might helpful troubleshooting. Detailed steps reproduce bug. possible, please include issue minimal reprex (also help write unit test, needed).","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/CONTRIBUTING.html","id":"fix-bugs","dir":"","previous_headings":"Bigger changes","what":"Fix bugs","title":"Contributing to SpotifyAssistantR","text":"Look GitHub issues bugs. Anything tagged “bug” “help wanted” open whoever wants implement .","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/CONTRIBUTING.html","id":"implement-features","dir":"","previous_headings":"Bigger changes","what":"Implement features","title":"Contributing to SpotifyAssistantR","text":"Look GitHub issues features. Anything tagged “enhancement” “help wanted” open whoever wants implement .","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/CONTRIBUTING.html","id":"submit-feedback","dir":"","previous_headings":"Bigger changes","what":"Submit Feedback","title":"Contributing to SpotifyAssistantR","text":"proposing feature: Explain detail work. Keep scope narrow possible, make easier implement. Remember volunteer-driven project, contributions welcome :)","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"","what":"Pull request process","title":"Contributing to SpotifyAssistantR","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"UBC-MDS/SpotifyAssistantR\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Pull request process","what":"Code style","title":"Contributing to SpotifyAssistantR","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to SpotifyAssistantR","text":"Please note SpotifyAssistantR project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 SpotifyAssistantR authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/articles/my-vignette.html","id":"spotifyassistantr","dir":"Articles","previous_headings":"","what":"SpotifyAssistantR","title":"Getting Started with SpotifyAssistantR","text":"package uses wrapper functions Spotify API SpotifyR combines give Spotify users insight listening habits. four main functions: 1. Getting recent song releases continent 2. Getting user’s top genres 3. Getting user’s playlists tracks 4. Getting new song recommendations based user’s top artists","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/articles/my-vignette.html","id":"initial-setup","dir":"Articles","previous_headings":"","what":"Initial Setup","title":"Getting Started with SpotifyAssistantR","text":"order use SpotifyAssistantR package, user must Spotify account, well Spotify Developer Account. Click create Spotify Developer account.","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/articles/my-vignette.html","id":"client-id-and-secret","dir":"Articles","previous_headings":"Initial Setup","what":"Client ID and Secret","title":"Getting Started with SpotifyAssistantR","text":"developer account made, log go user Dashboard. Click green CREATE APP button name new app. app created, user immediately redirected app overview page. page, directly name app, pieces information. Note Client ID. one two credentials necessary using functions package. Client ID set System Environment variable, following: Click SHOW CLIENT SECRET. Note Client Secret. credential necessary using functions package. also set System Environment variable, following: Please note two credentials confidential, unique app.","code":"Sys.setenv(SPOTIFY_CLIENT_ID = 'xxxxxxxxxxxxxxxxxxxxx') Sys.setenv(SPOTIFY_CLIENT_SECRET = 'xxxxxxxxxxxxxxxxxxxxx')"},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/articles/my-vignette.html","id":"redirect-uri","dir":"Articles","previous_headings":"Initial Setup","what":"Redirect URI","title":"Getting Started with SpotifyAssistantR","text":"app overview page, aside Client ID Secret information, one part setup process. Click green EDIT SETTINGS button right side page. Add following Redirect URI: http://localhost:1410/ Now setup process complete.","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/articles/my-vignette.html","id":"getting-new-releases-by-continent","dir":"Articles","previous_headings":"","what":"Getting New Releases by Continent","title":"Getting Started with SpotifyAssistantR","text":"following function return one album Americas (.e. North South America). continents can specified : ‘Asia’, ‘Europe’, ‘Oceania’, ‘Africa’. number albums returned can also increased increasing limit.","code":"get_new_releases_by_continent(continent = 'Americas', limit = 1) # -- Loading new releases in  Americas , this may take a while...  # [1] \"Wet Leg\""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/articles/my-vignette.html","id":"getting-user-top-genres","dir":"Articles","previous_headings":"","what":"Getting User Top Genres","title":"Getting Started with SpotifyAssistantR","text":"following function return user’s top genres based listening trends among tracks “Music” library.","code":"get_users_top_genres() # [1] \"rap\"     \"pop\"     \"hip hop\" \"pop rap\" \"trap\""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/articles/my-vignette.html","id":"getting-user-playlists-and-tracks","dir":"Articles","previous_headings":"","what":"Getting User Playlists and Tracks","title":"Getting Started with SpotifyAssistantR","text":"following function return user’s saved playlists tracks: Playlists can also specified using playlist_names argument, like :","code":"get_playlists_songs() # for one playlist get_playlists_songs(playlist_names = 'bops')  # [1] \"Getting songs for bops\" # $bops #   [1] \"hot girl bummer\"                                           #   [2] \"Salt\"                                                      #   [3] \"Don't Start Now\"    # for more than one playlist get_playlists_songs(playlist_names = c('bops', 'night drives'))  # [1] \"Getting songs for night drives\" # [1] \"Getting songs for bops\" # $`night drives` #  [1] \"Sunset (2019 Y.Nakamura Remastering)\"                #  [2] \"Plastic Love\" # $bops #   [1] \"hot girl bummer\"                                           #   [2] \"Salt\"                                                      #   [3] \"Don't Start Now\""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/articles/my-vignette.html","id":"getting-user-song-recommendations","dir":"Articles","previous_headings":"","what":"Getting User Song Recommendations","title":"Getting Started with SpotifyAssistantR","text":"following function create new playlist Spotify, containing recommended songs user based user’s top artists. possible specify name new playlist using playlist_name argument. left blank, playlist simply named “Recommended Songs” followed current date. user can also specify number songs return playlist using num_songs argument. default 10 songs.","code":"get_song_recommendations() # [1] \"Generating recommended songs based on artists ...\" # [1] \"Here is a link to the new playlist: https://open.spotify.com/playlist/2CB2JEtHcraGS0GeEkzEUW\""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jenit Jain. Author, maintainer. Julie Song. Author. Caroline Tang. Author. Chester Wang. Author.","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Jain J, Song J, Tang C, Wang C (2023). SpotifyAssistantR: Enrich Spotify User Experience. https://github.com/UBC-MDS/SpotifyAssistantR, https://ubc-mds.github.io/SpotifyAssistantR/.","code":"@Manual{,   title = {SpotifyAssistantR: Enrich Spotify User Experience},   author = {Jenit Jain and Julie Song and Caroline Tang and Chester Wang},   year = {2023},   note = {https://github.com/UBC-MDS/SpotifyAssistantR, https://ubc-mds.github.io/SpotifyAssistantR/}, }"},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/index.html","id":"spotifyassistantr","dir":"","previous_headings":"","what":"Enrich Spotify User Experience","title":"Enrich Spotify User Experience","text":"project, aim create package R builds top spotifyR package offers useful features improve Spotify user experience. achieved utilizing REST APIs implement functions. Although spotifyR package consists wrapper functions Spotify REST APIs, package combine multiple requests spotifyR package provide additional insights Spotify users.","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/index.html","id":"authors","dir":"","previous_headings":"","what":"Authors","title":"Enrich Spotify User Experience","text":"Caroline Tang Chester Wang Jenit Jain Julie Song package originally created part requirements DSCI524 (Collaborative Software Development), course Master Data Science program University British Columbia. original members project abided Code Conduct.","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Enrich Spotify User Experience","text":"can install development version SpotifyAssistantR like :","code":"devtools::install_github('UBC-MDS/SpotifyAssistantR')"},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/index.html","id":"dependencies","dir":"","previous_headings":"","what":"Dependencies","title":"Enrich Spotify User Experience","text":"R (>=4.1.0) spotifyr (2.2.4) dplyr","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/index.html","id":"environment-setup","dir":"","previous_headings":"","what":"Environment Setup","title":"Enrich Spotify User Experience","text":"Using package requires Spotify Spotify Developer accounts, can create Spotify Developer website. creating account, need create app obtain necessary client ID secret order authenticate Spotify API. Creating app Spotify Developer Dashboard giving app name description, able obtain client ID secret top app overview: clicking SHOW CLIENT SECRET: Client ID secret location use package require supplement client ID client secret environment variables: must provided loading spotifyr library using package. Running spotifyr::get_spotify_authentication_code() open new browser tab asks permission app access information. successful, get message can close tab return R. case, may need add http://localhost:1410/ redirect URI app, clicking Edit Settings app overview pasting URI Redirect URIs. Alternatively, may need rotate client secret re-assign SPOTIFY_CLIENT_SECRET.","code":"Sys.setenv(SPOTIFY_CLIENT_ID = 'xxxxxxxxxxxxxxxxxxxxx') Sys.setenv(SPOTIFY_CLIENT_SECRET = 'xxxxxxxxxxxxxxxxxxxxx')  access_token <- spotifyr::get_spotify_access_token() authentication_code <- spotifyr::get_spotify_authentication_code()"},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Enrich Spotify User Experience","text":"basic usage examples core functions: detailed usage information, please see ","code":"library(SpotifyAssistantR)  Sys.setenv(SPOTIFY_CLIENT_ID = 'xxxxxxxxxxxxxxxxxxxxx') Sys.setenv(SPOTIFY_CLIENT_SECRET = 'xxxxxxxxxxxxxxxxxxxxx')  # Get new releases in Asia: get_new_releases_by_continent(continent = 'Americas', n_limit=3) # -- Loading new releases in  Americas , this may take a while...  # [[1]] # [1] \"Renegade\" #  # [[2]] # [1] \"LANDER\" #  # [[3]] # [1] \"Dreaming of You\"  # Get a new playlist on your Spotify account filled with recommended songs based on your top artists: get_song_recommendations() # [1] \"Generating recommended songs based on artists ...\" # [1] \"Here is a link to the new playlist: https://open.spotify.com/playlist/2CB2JEtHcraGS0GeEkzEUW\"  # This is a simple example to get song titles from some of your saved playlists:  # for one playlist get_playlists_songs(playlist_names = 'bops')  # [1] \"Getting songs for bops\" # $bops #   [1] \"hot girl bummer\"                                           #   [2] \"Salt\"                                                      #   [3] \"Don't Start Now\"    # for more than one playlist get_playlists_songs(playlist_names = c('bops', 'night drives'))  # [1] \"Getting songs for night drives\" # [1] \"Getting songs for bops\" # $`night drives` #  [1] \"Sunset (2019 Y.Nakamura Remastering)\"                #  [2] \"Plastic Love\" # $bops #   [1] \"hot girl bummer\"                                           #   [2] \"Salt\"                                                      #   [3] \"Don't Start Now\"  # Get the top genres of music among the tracks in \"Your Music\" library. get_users_top_genres()  # [1] \"rap\"     \"pop\"     \"hip hop\" \"pop rap\" \"trap\""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/create_rec_playlist.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a playlist — create_rec_playlist","title":"Create a playlist — create_rec_playlist","text":"Creates new, empty playlist user Spotify.","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/create_rec_playlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a playlist — create_rec_playlist","text":"","code":"create_rec_playlist(   playlist_name,   authorization = get_spotify_authorization_code() )"},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/create_rec_playlist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a playlist — create_rec_playlist","text":"playlist_name name new playlist. authorization authorization token code user's account.","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/create_rec_playlist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a playlist — create_rec_playlist","text":"list containing url playlist id new playlist.","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/extract_artist_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Artist ID — extract_artist_id","title":"Extract Artist ID — extract_artist_id","text":"Extract Artist ID","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/extract_artist_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Artist ID — extract_artist_id","text":"","code":"extract_artist_id(artists)"},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/extract_artist_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Artist ID — extract_artist_id","text":"artists vector containing artist information.","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/extract_artist_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Artist ID — extract_artist_id","text":"vector artist IDs.","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/filter_playlists.html","id":null,"dir":"Reference","previous_headings":"","what":"Filters a dataframe of playlists — filter_playlists","title":"Filters a dataframe of playlists — filter_playlists","text":"Filters dataframe playlists","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/filter_playlists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filters a dataframe of playlists — filter_playlists","text":"","code":"filter_playlists(all_playlists, playlist_names = NULL)"},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/filter_playlists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filters a dataframe of playlists — filter_playlists","text":"all_playlists dataframe containing names IDs playlists playlist_names character vector containing playlist names, defaults ","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/filter_playlists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filters a dataframe of playlists — filter_playlists","text":"dataframe containing names IDs playlists","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/get_all_artists.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Artist information — get_all_artists","title":"Get Artist information — get_all_artists","text":"function iteratively calls Spotify API #' get information artists present list tracks.","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/get_all_artists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Artist information — get_all_artists","text":"","code":"get_all_artists(saved_tracks)"},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/get_all_artists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Artist information — get_all_artists","text":"saved_tracks dataframe containing metadata user's saved tracks.","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/get_all_artists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Artist information — get_all_artists","text":"list containing metadata artists.","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/get_all_genres.html","id":null,"dir":"Reference","previous_headings":"","what":"Get All Genres — get_all_genres","title":"Get All Genres — get_all_genres","text":"Get Genres","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/get_all_genres.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get All Genres — get_all_genres","text":"","code":"get_all_genres()"},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/get_all_genres.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get All Genres — get_all_genres","text":"vector containing possible Spotify genres.","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/get_all_playlists.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all the names and ids of a user's playlists — get_all_playlists","title":"Get all the names and ids of a user's playlists — get_all_playlists","text":"Get names ids user's playlists","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/get_all_playlists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all the names and ids of a user's playlists — get_all_playlists","text":"","code":"get_all_playlists(authorization)"},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/get_all_playlists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all the names and ids of a user's playlists — get_all_playlists","text":"authorization authorization token Spotify API","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/get_all_playlists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all the names and ids of a user's playlists — get_all_playlists","text":"dataframe containing names IDs playlists","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/get_genre_seeds.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Genre Seeds — get_genre_seeds","title":"Get Genre Seeds — get_genre_seeds","text":"Get Genre Seeds","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/get_genre_seeds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Genre Seeds — get_genre_seeds","text":"","code":"get_genre_seeds()"},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/get_genre_seeds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Genre Seeds — get_genre_seeds","text":"list 5 genre seeds","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/get_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the country list by continent — get_map","title":"Get the country list by continent — get_map","text":"Get country list continent","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/get_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the country list by continent — get_map","text":"","code":"get_map()"},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/get_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the country list by continent — get_map","text":"list containing countries, continent name","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/get_new_releases_by_continent.html","id":null,"dir":"Reference","previous_headings":"","what":"Get names of new releases by continent — get_new_releases_by_continent","title":"Get names of new releases by continent — get_new_releases_by_continent","text":"Get names new releases continent","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/get_new_releases_by_continent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get names of new releases by continent — get_new_releases_by_continent","text":"","code":"get_new_releases_by_continent(continent, limit)"},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/get_new_releases_by_continent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get names of new releases by continent — get_new_releases_by_continent","text":"continent : continent name (.e. Asia, Europe, Oceania, Americas, Africa) limit : max number albums extract","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/get_new_releases_by_continent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get names of new releases by continent — get_new_releases_by_continent","text":"list titles new releases String corresponding continent","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/get_new_releases_by_continent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get names of new releases by continent — get_new_releases_by_continent","text":"","code":"if (FALSE) { get_new_releases_by_continent('Asia', 5) get_new_releases_by_continent('Americas', 1) }"},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/get_new_songs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get New Songs — get_new_songs","title":"Get New Songs — get_new_songs","text":"Returns specified number recommended songs Spotify.","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/get_new_songs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get New Songs — get_new_songs","text":"","code":"get_new_songs(seed_type, seeds, num_songs = 10)"},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/get_new_songs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get New Songs — get_new_songs","text":"seed_type Either 'artists' 'genres'. Default 'artists'. seeds vector artist track ID's. num_songs number recommended songs return. Must 1 100 (inclusive).","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/get_new_songs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get New Songs — get_new_songs","text":"vector track uri's identifying specific tracks.","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/get_one_playlist_songs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all the songs from a playlist — get_one_playlist_songs","title":"Get all the songs from a playlist — get_one_playlist_songs","text":"Get songs playlist","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/get_one_playlist_songs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all the songs from a playlist — get_one_playlist_songs","text":"","code":"get_one_playlist_songs(playlist_id)"},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/get_one_playlist_songs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all the songs from a playlist — get_one_playlist_songs","text":"playlist_id character string containing ID Spotify playlist","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/get_one_playlist_songs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all the songs from a playlist — get_one_playlist_songs","text":"character vector containing song names","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/get_playlists_songs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all the songs from a user's playlists — get_playlists_songs","title":"Get all the songs from a user's playlists — get_playlists_songs","text":"wrapper function gets names songs contained one user's owned saved public collaborative playlists. default, songs valid playlists returned, playlists can also specified name.","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/get_playlists_songs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all the songs from a user's playlists — get_playlists_songs","text":"","code":"get_playlists_songs(playlist_names = NULL)"},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/get_playlists_songs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all the songs from a user's playlists — get_playlists_songs","text":"playlist_names character vector containing playlist names, defaults ","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/get_playlists_songs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all the songs from a user's playlists — get_playlists_songs","text":"list containing vector song names playlists","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/get_playlists_songs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get all the songs from a user's playlists — get_playlists_songs","text":"","code":"if (FALSE) { get_playlists_songs() get_playlists_songs('night drives') get_playlists_songs(c('night drives', 'boss rush')) }"},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/get_releases.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all releases by continent — get_releases","title":"Get all releases by continent — get_releases","text":"Get releases continent","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/get_releases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all releases by continent — get_releases","text":"","code":"get_releases(continent, limit)"},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/get_releases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all releases by continent — get_releases","text":"continent continent name String limit number releases extract","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/get_releases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all releases by continent — get_releases","text":"list containing info selected new releases","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/get_saved_tracks.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the user's saved tracks — get_saved_tracks","title":"Get the user's saved tracks — get_saved_tracks","text":"function iteratively calls Spotify API get user's saved tracks metadata pertaining track.","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/get_saved_tracks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the user's saved tracks — get_saved_tracks","text":"","code":"get_saved_tracks(authorization)"},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/get_saved_tracks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the user's saved tracks — get_saved_tracks","text":"authorization authorization token Spotify API","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/get_saved_tracks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the user's saved tracks — get_saved_tracks","text":"dataframe containing metadata user's saved tracks.","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/get_song_recommendations.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a playlist of recommended songs. — get_song_recommendations","title":"Creates a playlist of recommended songs. — get_song_recommendations","text":"wrapper function first retrieves user's top 3 artists, uses information generate list 10 recommended songs. user top artist information, genre seeds used instead. new playlist created user, contains recommended songs. Prints url link new playlist Spotify.","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/get_song_recommendations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a playlist of recommended songs. — get_song_recommendations","text":"","code":"get_song_recommendations(playlist_name = NULL, num_songs = 10)"},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/get_song_recommendations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a playlist of recommended songs. — get_song_recommendations","text":"playlist_name name new playlist, string. Defaults \"Recommended Songs\" current date. num_songs number new songs generate. Must integer 1 100 (inclusive).","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/get_song_recommendations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a playlist of recommended songs. — get_song_recommendations","text":"","code":"if (FALSE) { get_song_recommendations() }"},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/get_top_artists.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Top Artists — get_top_artists","title":"Get Top Artists — get_top_artists","text":"Returns current user's top artists Spotify.","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/get_top_artists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Top Artists — get_top_artists","text":"","code":"get_top_artists()"},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/get_top_artists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Top Artists — get_top_artists","text":"data frame containing artist information.","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/get_top_genres.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the top genres — get_top_genres","title":"Get the top genres — get_top_genres","text":"function iterates list genres, counts number occurrences genres returns top 5 occurrences.","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/get_top_genres.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the top genres — get_top_genres","text":"","code":"get_top_genres(artist_information)"},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/get_top_genres.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the top genres — get_top_genres","text":"artist_information list containing metadata artists.","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/get_top_genres.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the top genres — get_top_genres","text":"vector containing top 5 occurrences.","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/get_users_top_genres.html","id":null,"dir":"Reference","previous_headings":"","what":"Finds the top 5 genres from a user's saved tracks — get_users_top_genres","title":"Finds the top 5 genres from a user's saved tracks — get_users_top_genres","text":"wrapper function goes user's entire saved library. song, checks artist involved genre music compose. returns top 5 commonly occurring genres.","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/get_users_top_genres.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Finds the top 5 genres from a user's saved tracks — get_users_top_genres","text":"","code":"get_users_top_genres()"},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/get_users_top_genres.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Finds the top 5 genres from a user's saved tracks — get_users_top_genres","text":"Character vector containing top 5 genres music User's saved library.","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/region_not_available.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the country code is valid — region_not_available","title":"Check if the country code is valid — region_not_available","text":"Check country code valid","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/region_not_available.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the country code is valid — region_not_available","text":"","code":"region_not_available(code)"},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/region_not_available.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the country code is valid — region_not_available","text":"code country code look ","code":""},{"path":"https://ubc-mds.github.io/SpotifyAssistantR/reference/region_not_available.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the country code is valid — region_not_available","text":"spotify available country ","code":""}]
